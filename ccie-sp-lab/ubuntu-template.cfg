#cloud-config
password: cisco
chpasswd: { expire: False }
hostname: ubuntu-2
ssh_pwauth: True
ssh_authorized_keys:
    - your-ssh-pubkey-line-goes-here

runcmd:
#- sudo sed -i -re 's/([a-z]{2}\.)?archive.ubuntu.com|security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list
- curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
- add-apt-repository "deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
- echo "deb [trusted=yes] https://apt.fury.io/netdevops/ /" | tee -a /etc/apt/sources.list.d/netdevops.list
- apt-get update -y
- apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose
- apt-get install -y containerlab bridge-utils expect
- mkdir -p /etc/systemd/system/docker.service.d/
- echo '[Service]' > /etc/systemd/system/docker.service.d/http-proxy.conf
- echo 'Environment="HTTP_PROXY=http://proxy.esl.cisco.com:80/" "HTTPS_PROXY=http://proxy.esl.cisco.com:80/" "NO_PROXY=.cisco.com"' >> /etc/systemd/system/docker.service.d/http-proxy.conf
- systemctl daemon-reload
- systemctl start docker
- systemctl enable docker
- usermod -a -G docker ubuntu
- containerlab completion bash > /etc/bash_completion.d/containerlab
- apt-get install -y tftpd-hpa
- chmod go+w /srv/tftp/
- sed -i "s/--secure/--secure --create/" /etc/default/tftpd-hpa
- systemctl restart tftpd-hpa.service
- echo 'fs.inotify.max_user_instances' = 64000 >> /etc/sysctl.conf
- echo 'fs.inotify.max_user_watches' = 64000 >> /etc/sysctl.conf
- echo 'net.bridge.bridge-nf-call-iptables' = 0 >> /etc/sysctl.conf
- echo 'net.bridge.bridge-nf-call-ip6tables' = 0 >> /etc/sysctl.conf
- sysctl -p
- mkdir /home/ubuntu/images
- ip link set ens9 up
- ip addr add 10.253.11.12/24 dev ens9

- git clone https://github.com/brunodarli/containerlab /home/ubuntu/containerlab --config http.https://github.com.proxy=http://proxy.esl.cisco.com:8080

- echo 'export PATH=/home/ubuntu/xrd/scripts:/home/ubuntu/bin:$PATH' >> /home/ubuntu/.profile
- echo "alias ssh='ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'" >> /home/ubuntu/.bash_aliases
- git clone https://gitlab-sjc.cisco.com/jtac-xr/xrd_lab.git /home/ubuntu/xrd_lab
- mkdir /home/ubuntu/radkit
- chown -R ubuntu:ubuntu /home/ubuntu
- docker run -d --restart always -p 8081:8081 -v /home/ubuntu/radkit:/radkit -e RADKIT_SERVICE_SUPERADMIN_PASSWORD_BASE64="$( echo -n 'Cisco123!' | base64 )" -e RADKIT_CLOUD_CLIENT_PROXY_URL=http://proxy.esl.cisco.com:80 -e RADKIT_SERVICE_CLI_RUN_FORCE=1 --name radkit containers.cisco.com/radkit/radkit-service:1.6.12

write_files:
- path: /etc/apt/apt.conf
  content: |
    Acquire::http::Proxy "http://proxy.esl.cisco.com:80";
    Acquire::https::Proxy "http://proxy.esl.cisco.com:80";
  owner: root:root
  permissions: '0644'
- path: /root/.curlrc
  content: |
    proxy = "http://proxy.esl.cisco.com:80"
    noproxy = "localhost,127.0.0.1,.cisco.com,10.70.69.134,10.70.69.1"
  owner: root:root
  permissions: '0644'
- path: /root/.gitconfig
  content: |
    [http "https://github.com"]
        proxy = http://proxy.esl.cisco.com:80
  owner: root:root
  permissions: '0644'
